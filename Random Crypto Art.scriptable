{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "teal",
    "glyph" : "images"
  },
  "name" : "Random Crypto Art",
  "script" : "const { transparent } = importModule('no-background');\n\n\/\/ icloud connection if you want to save cryptoart information, can be removed if you don't want that\nlet icloud = FileManager.iCloud();\n\n\/\/ Font Setup\nlet hlFont = new Font(\"Cochin-BoldItalic\", 14);\nlet titleFont = new Font(\"AvenirNext-Regular\", 18);\nlet priceFont = new Font(\"AvenirNext-Medium\", 16);\nlet myFontColor = Color.white();\n\n\/\/ API connection to coinranking\n\/\/ change dapp if you prefer another platform\nconst dapp = `superrare`\nconst url = `https:\/\/api.coinranking.com\/v2\/nfts?dappSlug=${dapp}&orderBy=auctionCreatedAt&limit=50`\nconst req = new Request(url)\nconst res = await req.loadJSON();\n\n\/\/ save artworks\nlet artworks = res.data.nfts;\nlet expensive_artworks = [];\n\nconsole.log(`Amount of retrieved artworks: ${artworks.length}`);\n\nartworks.forEach(artwork=>{  \n  if(artwork.price>1.5){   \n    expensive_artworks.push(artwork);\n  }\n});\n \nconsole.log(`Amount of expensive artworks: ${expensive_artworks.length}`);\n\n\/\/ get random artpiece\nlet rand = Math.floor(Math.random() * expensive_artworks.length);\nlet art = expensive_artworks[rand]\n\n\/\/ get image\nlet imageURL = art.image;\nconsole.log(imageURL)\nlet i = new Request(imageURL);\nlet img = await i.loadImage();\n\n\/\/ create widget with transparent background\nlet w = new ListWidget()\nw.backgroundImage = await transparent(Script.name())  \nw.setPadding(5, 5, 5, 5);\nw.url = art.externalUrl;\n\n\/\/ get current time\nlet myTimeFormat = new DateFormatter();\nmyTimeFormat.useShortTimeStyle();\nlet now = myTimeFormat.string(new Date());\n\n\/\/ createheadline\nlet headline = w.addText(`random crypto art of ${now}`);\nheadline.font = hlFont;\nheadline.centerAlignText();\nheadline.textColor = myFontColor;\nw.addSpacer(1);\n\n\/\/ create art piece title\nlet title_text = w.addText(art.name);\ntitle_text.font = titleFont;\ntitle_text.centerAlignText();\ntitle_text.textColor = myFontColor;\nw.addSpacer(1);\n\n\/\/ create price label  \nlet dollar = Number(art.priceInDollar).toFixed(2);\nlet priceInfo = `${art.price}Îž | ${dollar}$`;\nlet price_text = w.addText(priceInfo);\nprice_text.font = priceFont;\nprice_text.centerAlignText();\nprice_text.textColor = myFontColor;\nw.addSpacer(10);\n\n\/\/ add image\nlet nftimg = w.addImage(img);\nnftimg.url = art.externalUrl;\nnftimg.centerAlignImage();\n\n\/\/ save information to icloud\nlet database = icloud.bookmarkedPath(\"database\");\nlet filePath = `${database}\/currentnft.txt`;\nconsole.log(filePath);\nicloud.writeString(filePath, art.id)\n\n\/\/ check if run inside widget or from inside this app\nif (config.runsInWidget) {\n  Script.setWidget(w)\n  Script.complete()\n}\nelse {\n  w.presentLarge()\n\n}",
  "share_sheet_inputs" : [

  ]
}